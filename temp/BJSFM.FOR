C 
      PROGRAM BJSFM
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C 
      COMMON/ONE/E1(3),E2(3),G12(3),V12(3)
      COMMON/TWO/IOUT(15),NUMPLY,NUMMAT,ANG(8),PLYTHK(8),MATID(8) 
      COMMON/THREE/IANG,ILOW,IHIGH,STPINK,NUMSTP
      COMMON/FOUR/PX,PY,PXY,P,PW,ALPHA,BETA,DIA,CORRECT 
      COMMON/FIVE/FXT(3),FXC(3),FYT(3),FYC(3),FXY(3),IFAIL
      COMMON/SIX/AI(3,3)
      COMMON/SEVEN/S(3,3) 
      COMMON/EIGHT/STRESS(3,7,73),STRAIN(3,7,73)
      COMMON/NINE/STR1(8,7,73),STR2(8,7,73),STR12(8,7,73) 
      INTEGER ANS,ANS2,YES
      DOUBLE PRECISION IANG,ILOW,IHIGH
C 
      DATA YES/3HYES/,NO/2HNO/
C 
C 
   10 CONTINUE
      WRITE(6,701)
 701  FORMAT('1DO YOU WANT INSTRUCTIONS?')
      READ(5,20)ANS 
   20 FORMAT(A3)
C 
      IF(ANS.EQ.YES) WRITE(6,30)
   30 FORMAT(' SELECT DESIRED OUTPUT FROM THE FOLLOWING CASES.'/, 
     1'  1  CARPET PLOT DATA'/'  2  LAMINATE PROPERTIES'/'  3  ', 
     2'LAMINATE STRESSES'/'  4  LAMINATE STRAINS'/'  5  CIRCUMF', 
     3'ERENTIAL & RADIAL STRESSES/STRAINS'/'  6  DISPLACEMENTS'/, 
     4'  7  STRAINS PER PLY'/'  8  STRESSES PER PLY'/,
     5'  9  FAILURE CRITERIA PER PLY'/' 10  AUTOMATIC SEARCH FOR ', 
     6'FAILURE')
C 
      DO 40 L=1,15
      IOUT(L)=0 
   40 CONTINUE
      READ(5,*  )(IOUT(L),L=1,10) 
C 
      IF(ANS.EQ.YES) WRITE(6,50)
   50 FORMAT(' INPUT NUMBER OF DIFFERENT PLIES TO BE INPUT (8 MAX)',
     1' AND'/' NUMBER OF DIFFERENT MATERIALS (3 MAX)')
      READ(5,*  )NUMPLY,NUMMAT
C 
      IF(ANS.EQ.YES) WRITE(6,60)
   60 FORMAT(' INPUT THE UNIDIRECTIONAL MATERIAL PROPERTIES FOR ',
     1'EACH MATERIAL'/' IN THE FOLLOWING ORDER:  E1, E2, G12, ',
     2'POISSONS RATIO') 
      READ(5,*  )(E1(L),E2(L),G12(L),V12(L),L=1,NUMMAT) 
C 
C 
      IF(ANS.EQ.YES.AND.PUTOUT(IOUT,9).GE.1.) WRITE(6,70) 
   70 FORMAT(' INPUT THE UNIDIRECTIONAL ALLOWABLES FOR EACH ',
     1'MATERIAL'/' IN THE FOLLOWING ORDER:  T1, C1, T2, C2, SHEAR') 
      IF(PUTOUT(IOUT,9).GE.1.) READ(5,*  )(FXT(J),FXC(J),FYT(J),
     1FYC(J),FXY(J),J=1,NUMMAT) 
C 
* 
C     INPUT ANGULAR ORIENTATION, THICKNESS AND MATERIAL 
C     IDENTIFICATION PER PLY
C 
      IF(ANS.EQ.YES) WRITE(6,80)
   80 FORMAT(' INPUT THE ANGULAR ORIENTATION OF EACH PLY')
      READ(5,*  )(ANG(L),L=1,NUMPLY)
C 
      IF(ANS.EQ.YES) WRITE(6,90)
   90 FORMAT(' INPUT THE THICKNESS OF EACH PLY')
      READ(5,*  )(PLYTHK(J),J=1,NUMPLY) 
  100 CONTINUE
C 
      IF(NUMMAT.NE.1) GO TO 120 
      DO 110 L=1,NUMPLY 
      MATID(L)=1
  110 CONTINUE
      GO TO 140 
  120 CONTINUE
C 
      IF(ANS.EQ.YES) WRITE(6,130) 
  130 FORMAT(' INPUT THE MATERIAL NUMBER FOR EACH PLY') 
      READ(5,*  )(MATID(L),L=1,NUMPLY)
  140 CONTINUE
      IF(PUTOUT(IOUT,3).EQ.0.0) GO TO 200 
C 
      IF(ANS.EQ.YES.AND.PUTOUT(IOUT,3).GE.1.) WRITE(6,150)
  150 FORMAT(' INPUT:  FAR FIELD STRESSES PX,PY,PXY, OFF AXIS ANGLE,',
     1' BEARING STRESS'/' AND BOLT LOADING ANGLE.') 
      IF(PUTOUT(IOUT,3).GE.1.) READ(5,*  ) PX,PY,PXY,BETA,P,ALPHA 
C 
      IF(ANS.EQ.YES.AND.P.NE.0.0) WRITE(6,160)
  160 FORMAT(' INPUT WIDTH (0.0 FOR INFINITE PLATE)') 
      IF(PUTOUT(IOUT,3).GE.1..AND.P.NE.0.0) READ(5,*  ) W 
C 
  170 CONTINUE
      IF(ANS.EQ.YES.AND.PUTOUT(IOUT,3).GE.1.) WRITE(6,180)
  180 FORMAT(' INPUT BOLT DIAMETER, DEGREES BETWEEN OUTPUT, LOW ',
     1'RANGE, HIGH RANGE,'/' STEP INCREMENT AND NUMBER OF STEPS', 
     2' DESIRED (7 MAX)') 
C 
      IF(PUTOUT(IOUT,3).GE.1.) READ(5,*  ) DIA,IANG,ILOW,IHIGH, 
     1STPINK,NUMSTP 
C 
      IF(NUMSTP.GT.7) NUMSTP=7
      RANGE=(IHIGH-ILOW)/IANG 
      IF(RANGE.GT.72) WRITE(6,702)
 702  FORMAT(' DEGREES BETWEEN OUTPUT TOO SMALL, TRY AGAIN...') 
      IF(RANGE.GT.72) GO TO 170 
C 
      BL=P*DIA
      PW=0.0
      IF(P.NE.0.0.AND.W.NE.0.0) PW=BL/(2.0*W) 
      WD=W/DIA
      IF(WD.LT.4.0.AND.W.NE.0.0) WRITE(6,699) 
 699  FORMAT(' CAUTION: WIDTH-TO-DIAMETER RATIOS LESS', 
     2' THAN 4 RESULT IN ERRONEOUS PRATTLE...') 
C 
      IF(ANS.EQ.YES.AND.PUTOUT(IOUT,9).GE.1.) WRITE(6,190)
  190 FORMAT(' INPUT THE NUMBER WHICH CORRESPONDS TO THE ', 
     1'FAILURE CRITERIA '/' YOU WISH TO USE'/' 1  MAXIMUM STRAIN'/, 
     2' 2  MAXIMUM STRESS'/' 3  TSAI-HILL'/' 4  MODIFIED ', 
     3'TSAI-WU'/' 5  HOFFMAN')
      IF(PUTOUT(IOUT,9).GE.1.) READ(5,*  )IFAIL 
C 
      IF(PUTOUT(IOUT,10).EQ.2.) NUMSTP=2
  200 CONTINUE
C 
C     CARPET PLOT ROUTINE 
C 
      IF(PUTOUT(IOUT,1).NE.2.) GO TO 240
      ANG1=ANG(1) 
      ANG2=ANG(2) 
      ANG3=ANG(3) 
      ANG4=ANG(4) 
      PLYT1=PLYTHK(1) 
      PLYT2=PLYTHK(2) 
      PLYT3=PLYTHK(3) 
      PLYT4=PLYTHK(4) 
      DO 280 JKI=1,11 
      FORFIV=-.1
      DO 270 IJK=1,11 
      ANG(1)=ANG1 
      ANG(2)=ANG2 
      ANG(3)=ANG3 
      ANG(4)=ANG4 
      PLYTHK(1)=PLYT1 
      PLYTHK(2)=PLYT2 
      PLYTHK(3)=PLYT3 
      PLYTHK(4)=PLYT4 
      NUMPLY=4
      PLYTHK(1)=1.1-JKI*.1
      FORFIV=FORFIV+.1
      CHECK=FORFIV+PLYTHK(1)
      IF(CHECK.GT.1.0) GO TO 280
      PLYTHK(2)=FORFIV/2. 
      PLYTHK(3)=FORFIV/2. 
      PLYTHK(4)=1.0-PLYTHK(1)-FORFIV
      I0=PLYTHK(1)*100.4
      I45=PLYTHK(2)*200.4 
      I90=PLYTHK(4)*100.4 
      IF(I0.NE.0) GO TO 210 
      NUMPLY=NUMPLY-1 
      PLYTHK(1)=PLYTHK(2) 
      PLYTHK(2)=PLYTHK(3) 
      PLYTHK(3)=PLYTHK(4) 
      ANG(1)=ANG(2) 
      ANG(2)=ANG(3) 
      ANG(3)=ANG(4) 
  210 CONTINUE
      IF(I45.NE.0) GO TO 220
      NUMPLY=NUMPLY-2 
      IF(NUMPLY.EQ.1) PLYTHK(1)=PLYTHK(4) 
      IF(NUMPLY.EQ.1) ANG(1)=ANG(4) 
      PLYTHK(2)=PLYTHK(4) 
      ANG(2)=ANG(4) 
  220 CONTINUE
      IF(I90.EQ.0) NUMPLY=NUMPLY-1
      IF(PUTOUT(IOUT,1).EQ.2.) WRITE(6,230) I0,I45,I90
  230 FORMAT(//25X,'LAYUP:  ',I3,'/',I3,'/',I3) 
C 
C     BRANCHES TO OTHER SUBROUTINES 
C 
  240 IF(PUTOUT(IOUT,2).EQ.0.) GO TO 260
      ALPH=ALPHA
      CALL ABD(ALPH)
C 
      CORRECT=1.0 
      DUMMY=PUTOUT(IOUT,98) 
  250 CONTINUE
      IF(PUTOUT(IOUT,3).EQ.0.) GO TO 260
      CALL LAMSTR 
C 
      IF(PUTOUT(IOUT,7).EQ.0.) GO TO 260
      CALL PLYSTR(IFAIL)
C 
      IF(PUTOUT(IOUT,9).EQ.0.) GO TO 260
      CALL FAILURE
C 
      IF(PUTOUT(IOUT,10).EQ.2.) DUMMY=PUTOUT(IOUT,99) 
      IF(CORRECT.LT..999.OR.CORRECT.GT.1.001) GO TO 250 
C 
C 
  260 CONTINUE
      DUMMY=PUTOUT(IOUT,98) 
      IF(PUTOUT(IOUT,1).NE.2.) GO TO 290
C 
  270 CONTINUE
  280 CONTINUE
  290 CONTINUE
C 
      WRITE(6,703)
 703  FORMAT(' DO YOU WISH TO CONTINUE?') 
      READ(5,300) ANS2
  300 FORMAT(A3)
      IF(ANS2.NE.NO) GO TO 10 
C 
C 
C 
      STOP
      END 
C 
C     *********************************************************** 
C 
      DOUBLE PRECISION FUNCTION PUTOUT(IOUT,IN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IOUT(15)
      PUTOUT=0. 
      DO 10 J=1,15
      IF(IOUT(J).GE.IN) PUTOUT=1. 
   10 CONTINUE
      DO 20 J=1,15
      IF(IOUT(J).EQ.IN) PUTOUT=2. 
   20 CONTINUE
      IF(IN.EQ.98) DATA=0.0 
      IF(IN.EQ.99) DATA=1.0 
      IF(DATA.EQ.1.0.AND.IN.LT.10) PUTOUT=0.5 
      RETURN
      END 
C 
C     **********************************************************
C 
      SUBROUTINE ABD (ALPHA)
C 
C     CALCULATES LAMINATE PROPERTIES FROM LAMINA INPUT
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/ONE/E1(3),E2(3),G12(3),V12(3)
      COMMON/TWO/IOUT(15),NUMPLY,NUMMAT,ANG(8),PLYTHK(8),MATID(8) 
      COMMON/SIX/AI(3,3)
      COMMON/SEVEN/S(3,3) 
C 
C 
      DIMENSION V21(3),DIV(3),Q11(3),Q22(3),Q12(3),Q66(3),U1(3),
     1U2(3),U3(3),U4(3),U5(3),QBAR(8,3,3),ZZ(16),Z(16),Q(3,3),
     2AA(3,3),A(3,3)
C 
C 
C     REDUCED STIFFNESSES FOR EACH MATERIAL 
C 
      DO 10 M=1,NUMMAT
      V21(M)=E2(M)*V12(M)/E1(M) 
      DIV(M)=1.-V12(M)*V21(M) 
      Q11(M)=E1(M)/DIV(M) 
      Q22(M)=E2(M)/DIV(M) 
      Q12(M)=V12(M)*E2(M)/DIV(M)
      Q66(M)=G12(M) 
   10 CONTINUE
C 
C     INVARIANT PROPERTIES
C 
      DO 20 M=1,NUMMAT
      U1(M)=(3.*Q11(M)+3.*Q22(M)+2.*Q12(M)+4.*Q66(M))/8.
      U2(M)=(Q11(M)-Q22(M))/2.
      U3(M)=(Q11(M)+Q22(M)-2.*Q12(M)-4.*Q66(M))/8.
      U4(M)=(Q11(M)+Q22(M)+6.*Q12(M)-4.*Q66(M))/8.
      U5(M)=(Q11(M)+Q22(M)-2.*Q12(M)+4.*Q66(M))/8.
   20 CONTINUE
C 
      DO 30 I=1,3 
      DO 30 J=1,3 
      A(I,J)=0. 
      AA(I,J)=0.
   30 CONTINUE
C 
C     TRANSFORMED REDUCED STIFFNESSES PER PLY 
C 
      THICK=0.
      DO 40 L=1,NUMPLY
      DEG=ANG(L)*3.1415926535/180.0 
      M=MATID(L)
      QBAR(L,1,1)=U1(M)+U2(M)*DCOS(2.*DEG)+U3(M)*DCOS(4.*DEG) 
      QBAR(L,1,2)=U4(M)-U3(M)*DCOS(4.*DEG) 
      QBAR(L,2,2)=U1(M)-U2(M)*DCOS(2.*DEG)+U3(M)*DCOS(4.*DEG) 
      QBAR(L,1,3)=.5*U2(M)*DSIN(2.*DEG)+U3(M)*DSIN(4.*DEG)
      QBAR(L,2,3)=.5*U2(M)*DSIN(2.*DEG)-U3(M)*DSIN(4.*DEG)
      QBAR(L,3,3)=U5(M)-U3(M)*DCOS(4.*DEG) 
      QBAR(L,2,1)=QBAR(L,1,2) 
      QBAR(L,3,1)=QBAR(L,1,3) 
      QBAR(L,3,2)=QBAR(L,2,3) 
C 
      THICK=PLYTHK(L)+THICK 
      ZZ(L+1)=THICK 
   40 CONTINUE
      Z(1)=-1.*THICK/2.0
C 
C     CALCULATE A MATRIX
C 
      DO 70 I=1,3 
      DO 60 J=1,3 
      DO 50 L=1,NUMPLY
      Z(L+1)=Z(1)+ZZ(L+1) 
      ZA=Z(L+1)-Z(L)
C 
      A(I,J)=A(I,J)+QBAR(L,I,J)*ZA
C 
   50 CONTINUE
C 
C     MATRIX Q AND QQ ARE DUMMY MATRICIES USED IN CALCULATIONS INVOLVING
C     THE MANIPULATION OF OTHER MATRICIES 
C 
      Q(I,J)=A(I,J)/THICK 
   60 CONTINUE
   70 CONTINUE
C 
C     COMPUTE A/THICK INVERSE MATRIX
C 
      ISTEP=1 
      CALL INVERSE(Q,AI)
C 
C     LAMINATE MID-PLANE PROPERTIES 
C 
      EX1=1.0/AI(1,1) 
      EY1=1.0/AI(2,2) 
      VXY1=-EX1*AI(1,2) 
      GXY1=1.0/AI(3,3)
C 
      IF(PUTOUT(IOUT,2).EQ.2.) WRITE(6,80) EX1,EY1,GXY1,VXY1
   80 FORMAT(/25X,'LAMINATE PROPERTIES'/' EX = ',E9.3,2X,'EY = ', 
     1E9.3,2X,'GXY = ',E9.3,2X,'VXY = ',F5.3) 
C 
C     CALCULATE MATERIAL PROPERTIES FOR OFF-AXIS BOLT LOAD
C 
C     TRANSFORMED REDUCED STIFFNESSES PER PLY 
C 
      THICK=0.
      ALPHA=ALPHA*3.1415926535/180.0
      DO 90 L=1,NUMPLY
      DEG=ANG(L)*3.1415926535/180.0 
      DEG=DEG-ALPHA 
      M=MATID(L)
      QBAR(L,1,1)=U1(M)+U2(M)*DCOS(2.*DEG)+U3(M)*DCOS(4.*DEG) 
      QBAR(L,1,2)=U4(M)-U3(M)*DCOS(4.*DEG) 
      QBAR(L,2,2)=U1(M)-U2(M)*DCOS(2.*DEG)+U3(M)*DCOS(4.*DEG) 
      QBAR(L,1,3)=.5*U2(M)*DSIN(2.*DEG)+U3(M)*DSIN(4.*DEG)
      QBAR(L,2,3)=.5*U2(M)*DSIN(2.*DEG)-U3(M)*DSIN(4.*DEG)
      QBAR(L,3,3)=U5(M)-U3(M)*DCOS(4.*DEG) 
      QBAR(L,2,1)=QBAR(L,1,2) 
      QBAR(L,3,1)=QBAR(L,1,3) 
      QBAR(L,3,2)=QBAR(L,2,3) 
C 
      THICK=PLYTHK(L)+THICK 
      ZZ(L+1)=THICK 
   90 CONTINUE
      Z(1)=-1.*THICK/2.0
C 
C     CALCULATE AA MATRIX 
C 
      DO 120 I=1,3
      DO 110 J=1,3
      DO 100 L=1,NUMPLY 
      Z(L+1)=Z(1)+ZZ(L+1) 
      ZA=Z(L+1)-Z(L)
C 
      AA(I,J)=AA(I,J)+QBAR(L,I,J)*ZA
C 
  100 CONTINUE
      Q(I,J)=AA(I,J)/THICK
  110 CONTINUE
  120 CONTINUE
C 
C     COMPUTE AA/THICK INVERSE MATRIX 
C 
      ISTEP=4 
      CALL INVERSE(Q,S) 
C 
C     OFF-AXIS LAMINATE PROPERTIES
C 
      EX2=1.0/S(1,1)
      EY2=1.0/S(2,2)
      VXY2=-EX2*S(1,2)
      GXY2=1.0/S(3,3) 
C 
C 
      RETURN
      END 
C 
C     *********************************************************** 
C 
      SUBROUTINE INVERSE (X,XI) 
C 
C     CALCULATES THE INVERSE OF A 3X3 MATRIX
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION X(3,3), XI(3,3) 
      COMMON ISTEP
C 
C 
      DET=(X(1,1)*X(2,2)*X(3,3))+(X(1,2)*X(2,3)*X(3,1))+
     1    (X(1,3)*X(2,1)*X(3,2))-(X(1,3)*X(2,2)*X(3,1))-
     2    (X(1,1)*X(2,3)*X(3,2))-(X(1,2)*X(2,1)*X(3,3)) 
C 
      IF(DET.EQ.0.0) GO TO 10 
C 
      XI(1,1)=(X(2,2)*X(3,3)-X(2,3)*X(3,2))/DET 
      XI(1,2)=(X(2,3)*X(3,1)-X(2,1)*X(3,3))/DET 
      XI(1,3)=(X(2,1)*X(3,2)-X(2,2)*X(3,1))/DET 
      XI(2,2)=(X(1,1)*X(3,3)-X(1,3)*X(3,1))/DET 
      XI(2,3)=(X(1,2)*X(3,1)-X(1,1)*X(3,2))/DET 
      XI(3,3)=(X(1,1)*X(2,2)-X(1,2)*X(2,1))/DET 
      XI(2,1)=(X(3,2)*X(1,3)-X(1,2)*X(3,3))/DET 
      XI(3,1)=(X(1,2)*X(2,3)-X(2,2)*X(1,3))/DET 
      XI(3,2)=(X(2,1)*X(1,3)-X(1,1)*X(2,3))/DET 
      GO TO 30
   10 WRITE(6,20) ISTEP 
   20 FORMAT(' SUBROUTINE INVERSE CALCULATES A SINGULAR MATRIX ', 
     1'AT STEP'I3)
   30 CONTINUE
      RETURN
      END 
C 
C    ************************************************************ 
C 
      SUBROUTINE LAMSTR 
C 
C     CALCULATES THE LAMINATE STRESSES AND STRAINS DUE TO A 
C     GENERAL INPLANE LOADING WITH A BOLT LOAD
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/TWO/IOUT(15),NUMPLY,NUMMAT,ANG(8),PLYTHK(8),MATID(8) 
      COMMON/THREE/IANG,ILOW,IHIGH,STPINK,NUMSTP
      COMMON/FOUR/PX,PY,PXY,P,PW,ALPHA,BETA,DIA,CORRECT 
      COMMON/SIX/AI(3,3)
      COMMON/SEVEN/S(3,3) 
      COMMON/EIGHT/STRESS(3,7,73),STRAIN(3,7,73)
C 
      DOUBLE PRECISION IANG,ILOW,IHIGH
      DIMENSION STR(3,7,73),U(7,73),V(7,73),UX(7,73),VY(7,73) 
C 
      PX=CORRECT*PX 
      PY=CORRECT*PY 
      PXY=CORRECT*PXY 
      P=CORRECT*P 
      PW=CORRECT*PW 
C 
C 
      PI=3.1415926535 
      NUMPT=((IHIGH-ILOW)/IANG)+1 
      DO 10 J=1,NUMSTP
      DO 10 K=1,NUMPT 
      U(J,K)=0.0
      V(J,K)=0.0
      DO 10 I=1,3 
      STRESS(I,J,K)=0.0 
      STRAIN(I,J,K)=0.0 
   10 CONTINUE
C 
C     CALCULATE UNLOADED HOLE STRESSES
C 
      IF(PX.EQ.0.0) GO TO 20
      BETA0=BETA
      CALL UNLODED(PX,DIA,AI,BETA0,STRESS,U,V)
   20 CONTINUE
C 
      IF(PY.EQ.0.0) GO TO 40
      BETA90=BETA+90.0
      CALL UNLODED(PY,DIA,AI,BETA90,STR,UX,VY)
      DO 30 J=1,NUMSTP
      DO 30 K=1,NUMPT 
      U(J,K)=U(J,K)+UX(J,K) 
      V(J,K)=V(J,K)+VY(J,K) 
      DO 30 I=1,3 
      STRESS(I,J,K)=STRESS(I,J,K)+STR(I,J,K)
   30 CONTINUE
C 
   40 CONTINUE
      IF(PXY.EQ.0.0) GO TO 70 
      BETA45=BETA+45.0
      CALL UNLODED(PXY,DIA,AI,BETA45,STR,UX,VY) 
      DO 50 J=1,NUMSTP
      DO 50 K=1,NUMPT 
      U(J,K)=U(J,K)+UX(J,K) 
      V(J,K)=V(J,K)+VY(J,K) 
      DO 50 I=1,3 
      STRESS(I,J,K)=STRESS(I,J,K)+STR(I,J,K)
   50 CONTINUE
C 
      BETA45=BETA-45.0
      PXYN=-PXY 
      CALL UNLODED(PXYN,DIA,AI,BETA45,STR,UX,VY)
      DO 60 J=1,NUMSTP
      DO 60 K=1,NUMPT 
      U(J,K)=U(J,K)+UX(J,K) 
      V(J,K)=V(J,K)+VY(J,K) 
      DO 60 I=1,3 
      STRESS(I,J,K)=STRESS(I,J,K)+STR(I,J,K)
   60 CONTINUE
C 
   70 CONTINUE
C 
C     CALCULATE LOADED HOLE STRESSES
C 
      IF(P.EQ.0.0) GO TO 100
      ALPHA0=ALPHA
      PB=P
      CALL LOADED(PB,DIA,S,ALPHA0,STR,UX,VY)
      DO 80 J=1,NUMSTP
      DO 80 K=1,NUMPT 
      U(J,K)=U(J,K)+UX(J,K) 
      V(J,K)=V(J,K)+VY(J,K) 
      DO 80 I=1,3 
      STRESS(I,J,K)=STRESS(I,J,K)+STR(I,J,K)
   80 CONTINUE
C 
      ALPHA0=ALPHA
      CALL UNLODED(PW,DIA,AI,ALPHA0,STR,UX,VY)
      DO 90 J=1,NUMSTP
      DO 90 K=1,NUMPT 
      U(J,K)=U(J,K)+UX(J,K) 
      V(J,K)=V(J,K)+VY(J,K) 
      DO 90 I=1,3 
      STRESS(I,J,K)=STRESS(I,J,K)+STR(I,J,K)
   90 CONTINUE
  100 CONTINUE
C 
      IF(PUTOUT(IOUT,3).EQ.2.) WRITE(6,110) 
  110 FORMAT(///28X,'LAMINATE STRESSES'//'  DIST   ANGLE  X STRESS',
     1'   Y STRESS    SHEAR       MAX.       MIN.    DIRECTION'/, 
     239X,'STRESS    PRINCIPAL  PRINCIPAL') 
C 
C     CALCULATE PRINCIPAL STRESSES
C 
      IF(PUTOUT(IOUT,3).NE.2.) GO TO 140
      DO 130 JJ=1,NUMSTP
      DO 130 NN=1,NUMPT 
      PRINA=(STRESS(1,JJ,NN)-STRESS(2,JJ,NN))*(STRESS(1,JJ,NN)- 
     1      STRESS(2,JJ,NN))/4. 
      PRINA=SQRT(PRINA+STRESS(3,JJ,NN)*STRESS(3,JJ,NN)) 
      PRIN1=(STRESS(1,JJ,NN)+STRESS(2,JJ,NN))/2.+PRINA
      PRIN2=(STRESS(1,JJ,NN)+STRESS(2,JJ,NN))/2.-PRINA
      TSTS=STRESS(1,JJ,NN)-STRESS(2,JJ,NN)
      DIRCT=0.
      IF(TSTS.NE.0.) DIRCT=.5*DATAN(2.*STRESS(3,JJ,NN)/TSTS) 
      DIRCT=180.*DIRCT/3.1415926535 
C 
      IF(PUTOUT(IOUT,3).NE.2.) GO TO 140
      ANGLE=(NN-1)*IANG+ILOW
      DIST=(JJ-1)*STPINK
      WRITE(6,120) DIST,ANGLE,STRESS(1,JJ,NN),STRESS(2,JJ,NN),
     1STRESS(3,JJ,NN),PRIN1,PRIN2,DIRCT 
  120 FORMAT(F6.3,F8.2,5F11.2,F8.2) 
  130 CONTINUE
  140 CONTINUE
C 
      IF(PUTOUT(IOUT,4).EQ.2.) WRITE(6,150) 
  150 FORMAT(///28X,'LAMINATE STRAINS'//'  DIST   ANGLE  X STRAIN', 
     1'   Y STRAIN    SHEAR       MAX.       MIN.    DIRECTION'/, 
     239X,'STRAIN    PRINCIPAL  PRINCIPAL') 
C 
C     CALCULATE LAMINATE STRAINS
C 
      DO 160 JJ=1,NUMSTP
      DO 160 NN=1,NUMPT 
      DO 160 KK=1,3 
      DO 160 MM=1,3 
      STRAIN(KK,JJ,NN)=AI(KK,MM)*STRESS(MM,JJ,NN)+STRAIN(KK,JJ,NN)
  160 CONTINUE
C 
C     CALCULATE PRINCIPAL STRAINS 
C 
      IF(PUTOUT(IOUT,4).NE.2.) GO TO 190
      DO 180 JJ=1,NUMSTP
      DO 180 NN=1,NUMPT 
      PRINA=(STRAIN(1,JJ,NN)-STRAIN(2,JJ,NN))*(STRAIN(1,JJ,NN)- 
     1      STRAIN(2,JJ,NN))/4. 
      PRINA=SQRT(PRINA+STRAIN(3,JJ,NN)*.25*STRAIN(3,JJ,NN)) 
      PRIN1=(STRAIN(1,JJ,NN)+STRAIN(2,JJ,NN))/2.+PRINA
      PRIN2=(STRAIN(1,JJ,NN)+STRAIN(2,JJ,NN))/2.-PRINA
      TSTS=STRAIN(1,JJ,NN)-STRAIN(2,JJ,NN)
      DIRCT=0.
      IF(TSTS.NE.0.) DIRCT=.5*DATAN(STRAIN(3,JJ,NN)/TSTS)
      DIRCT=180.*DIRCT/3.1415926535 
      DIST=(JJ-1)*STPINK
C 
      ANGLE=(NN-1)*IANG+ILOW
      WRITE(6,170) DIST,ANGLE,STRAIN(1,JJ,NN),STRAIN(2,JJ,NN),
     1STRAIN(3,JJ,NN),PRIN1,PRIN2,DIRCT 
  170 FORMAT(F6.3,F8.2,5F11.6,F8.2) 
  180 CONTINUE
  190 CONTINUE
C 
C     CALCULATE CIRCUMFERENTIAL AND RADIAL STRESSES & STRAINS 
C 
      IF(PUTOUT(IOUT,5).EQ.2.) WRITE(6,200) 
  200 FORMAT(///15X,'CIRCUMFERENTIAL AND RADIAL STRESSES & STRAINS',
     1//'  DIST     ANGLE     THETA      RADIAL     SHEAR     THETA', 
     2'    RADIAL   SHEAR'/21X,'STRESS     STRESS     ',
     3'STRESS    STRAIN   STRAIN   STRAIN') 
      IF(PUTOUT(IOUT,5).NE.2.) GO TO 230
      DO 220 J=1,NUMSTP 
      DO 220 N=1,NUMPT
      ENERGY=.5*(STRESS(1,J,N)*STRAIN(1,J,N)+STRESS(2,J,N)* 
     1       STRAIN(2,J,N)+STRESS(3,J,N)*STRAIN(3,J,N)) 
      ANGLE=(N-1)*IANG+ILOW 
      D=ANGLE*PI/180.0
      DIST=(J-1)*STPINK 
      RADSTS=STRESS(1,J,N)*DCOS(D)*DCOS(D)+STRESS(2,J,N)*DSIN(D)*
     1       DSIN(D)+2.*STRESS(3,J,N)*DSIN(D)*DCOS(D)
      CIRSTS=STRESS(1,J,N)*DSIN(D)*DSIN(D)+STRESS(2,J,N)*DCOS(D)*
     1       DCOS(D)-2.*STRESS(3,J,N)*DSIN(D)*DCOS(D)
      SHRSTS=-1.*STRESS(1,J,N)*DSIN(D)*DCOS(D)+STRESS(2,J,N)*DSIN(D)*
     1       DCOS(D)+STRESS(3,J,N)*(DCOS(D)*DCOS(D)-DSIN(D)*DSIN(D)) 
      RADSTN=STRAIN(1,J,N)*DCOS(D)*DCOS(D)+STRAIN(2,J,N)*DSIN(D)*
     1       DSIN(D)+STRAIN(3,J,N)*DSIN(D)*DCOS(D) 
      CIRSTN=STRAIN(1,J,N)*DSIN(D)*DSIN(D)+STRAIN(2,J,N)*DCOS(D)*
     1       DCOS(D)-STRAIN(3,J,N)*DSIN(D)*DCOS(D) 
      SHRSTN=-2*STRAIN(1,J,N)*DSIN(D)*DCOS(D)+2*STRAIN(2,J,N)*DSIN(D)* 
     1       DCOS(D)+STRAIN(3,J,N)*(DCOS(D)*DCOS(D)-DSIN(D)*DSIN(D)) 
      WRITE(6,210) DIST,ANGLE,CIRSTS,RADSTS,SHRSTS,CIRSTN,RADSTN, 
     1               SHRSTN 
  210 FORMAT(F6.3,F10.2,F12.2,2F11.2,3F9.6) 
  220 CONTINUE
  230 CONTINUE
C 
C     OUTPUT DISPLACEMENTS
C 
      D3=3.0*DIA
      DISP=DIA/2.0+NUMSTP*STPINK
      IF(PUTOUT(IOUT,6).EQ.2.0.AND.P.NE.0.0.AND.DISP.GT.D3) WRITE(6,704)
 704  FORMAT( 
     1' CAUTION:  DISPLACEMENTS AT POINTS GREATER THAN 3D AWAY '/ 
     2' FROM THE HOLE MAY BE IN ERROR') 
      IF(PUTOUT(IOUT,6).EQ.2.) WRITE(6,240) 
  240 FORMAT(///20X,'DISPLACEMENTS'//'   DIST     ANGLE'10X,'U'10X,'V') 
      IF(PUTOUT(IOUT,6).NE.2.) GO TO 270
      DO 260 J=1,NUMSTP 
      DO 260 K=1,NUMPT
      ANGLE=(K-1)*IANG+ILOW 
      DIST=(J-1)*STPINK 
      WRITE(6,250) DIST,ANGLE,U(J,K),V(J,K) 
  250 FORMAT(F7.3,F10.2,F13.6,F12.6)
  260 CONTINUE
  270 CONTINUE
      RETURN
      END 
C 
C      *********************************************************
C 
      SUBROUTINE UNLODED(P,DIA,AI,BETA,STRESS,U,V)
C 
C     CALCULATE STRESS DISTRIBUTION AROUND AN UNLOADED HOLE 
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/THREE/IANG,ILOW,IHIGH,STPINK,NUMSTP
      DOUBLE PRECISION IANG,ILOW,IHIGH
      DIMENSION STRESS(3,7,73),U(7,73),V(7,73),AI(3,3)
      DIMENSION WORK(5),COEF(5),RTR(4),RTI(4) 
      COMPLEX*16 R1,R2,COMPLX,XI1,XI2,COM1,COM2,DEN1,DEN2,PHI1,PHI2
      COMPLEX*16 Z,Z1,Z2,P1,P2,Q1,Q2 
C 
C     CALCULATE COMPLEX PARAMETERS
C 
C     INITIALIZE COMPLEX NUMBER:  SQRT(-1.) 
C 
      COMPLX=(0.,1.)
      NUMCO=4 
      COEF(1)=AI(2,2)*1000000 
      COEF(2)=-2.*AI(2,3)*1000000 
      COEF(3)=(2.*AI(1,2)+AI(3,3))*1000000
      COEF(4)=-2.*AI(1,3)*1000000 
      COEF(5)=AI(1,1)*1000000 
      CALL ROOTS(COEF,WORK,NUMCO,RTR,RTI,IE)
      R1=RTR(1)+COMPLX*RTI(1) 
      IF(RTI(2).GT.0.0) R1=RTR(2)+COMPLX*RTI(2) 
      R2=RTR(3)+COMPLX*RTI(3) 
      IF(RTI(4).GT.0.0) R2=RTR(4)+COMPLX*RTI(4) 
      P1=AI(1,1)*R1*R1+AI(1,2)-AI(1,3)*R1 
      P2=AI(1,1)*R2*R2+AI(1,2)-AI(1,3)*R2 
      Q1=AI(1,2)*R1+AI(2,2)/R1-AI(2,3)
      Q2=AI(1,2)*R2+AI(2,2)/R2-AI(2,3)
C 
C 
      PI=3.1415926535 
      BETA=BETA*PI/180.0
C 
      NUMPT=((IHIGH-ILOW)/IANG)+1 
C 
      DO 20 JJ=1,NUMSTP 
      DO 10 NN=1,NUMPT
C 
      U(JJ,NN)=0.0
      V(JJ,NN)=0.0
      NNN=NN-1
      JJJ=JJ-1
C 
      THETA=(NNN*IANG+ILOW)*PI/180.0
      RADIUS=JJJ*STPINK+DIA/2.0 
C 
C     CALCULATE X & Y COORDINATES OF POINTS AROUND UNLOADED HOLE
C 
      X=RADIUS*DCOS(THETA) 
      Y=RADIUS*DSIN(THETA) 
C 
C     CALCULATE LOCATION PARAMETERS FOR UNLOADED HOLE EQUATIONS 
C 
      Z1=X+R1*Y 
      Z2=X+R2*Y 
      Z=X+COMPLX*Y
C 
C     MAPPING FUNCTION
C 
      XI1=CDSQRT(Z1*Z1-DIA*DIA/4.-R1*R1*DIA*DIA/4.)
      XI2=CDSQRT(Z2*Z2-DIA*DIA/4.-R2*R2*DIA*DIA/4.)
C 
C     CHOOSE CORRECT SIGN OF CSQRT
C 
      XI1=Z1/XI1
      XI2=Z2/XI2
C 
      IF(DBLE(XI1).LT.-.00001) XI1=-1.*XI1
      IF(DBLE(XI2).LT.-.00001) XI2=-1.*XI2
C 
      XI1=1.-XI1
      XI2=1.-XI2
C 
C     CALCULATE PHI PRIME 
C 
      COM1=R2*DSIN(2.*BETA)+2.*DCOS(BETA)*DCOS(BETA)+COMPLX*(2.*R2*
     1     DSIN(BETA)*DSIN(BETA)+DSIN(2.*BETA))
      COM2=R1*DSIN(2.*BETA)+2.*DCOS(BETA)*DCOS(BETA)+COMPLX*(2.*R1*
     1     DSIN(BETA)*DSIN(BETA)+DSIN(2.*BETA))
C 
      DEN1=2.*DIA*(R1-R2)*(1.+COMPLX*R1)
      DEN2=2.*DIA*(R1-R2)*(1.+COMPLX*R2)
C 
      PHI1=-COMPLX*P*DIA*COM1*XI1/(2.*DEN1) 
      PHI2=COMPLX*P*DIA*COM2*XI2/(2.*DEN2)
C 
C     CALCULATE STRESSES AROUND HOLE
C 
      STRESS(1,JJ,NN)=P*DCOS(BETA)*DCOS(BETA)+2.*DBLE(R1*R1*PHI1+ 
     1                R2*R2*PHI2) 
      STRESS(2,JJ,NN)=P*DSIN(BETA)*DSIN(BETA)+2.*DBLE(PHI1+PHI2)
      STRESS(3,JJ,NN)=P*DSIN(BETA)*DCOS(BETA)-2.*DBLE(R1*PHI1+
     1                R2*PHI2)
C 
C     CALCULATE DISPLACEMENTS 
C 
      XI1=1.-XI1
      XI2=1.-XI2
C 
      XI1=Z1/XI1
      XI2=Z2/XI2
C 
      DEN1=16.*(R1-R2)*(Z1+XI1) 
      DEN2=16.*(R1-R2)*(Z2+XI2) 
C 
      PHI1=-P*DIA*DIA*(COMPLX+R1)*COM1/DEN1 
      PHI2=P*DIA*DIA*(COMPLX+R2)*COM2/DEN2
C 
      U(JJ,NN)=2.*DBLE(P1*PHI1+P2*PHI2) 
      V(JJ,NN)=2.*DBLE(Q1*PHI1+Q2*PHI2) 
C 
   10 CONTINUE
   20 CONTINUE
C 
C 
      RETURN
      END 
C 
C     *********************************************************** 
C 
      SUBROUTINE LOADED(P,DIA,S,ALPHA,STRESS,U,V) 
C 
C     CALCULATES STRESS DISTRIBUTION AROUND A LOADED HOLE 
C     ASSUMING A COSINE BOLT LOAD DISTRIBUTION
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/TWO/IOUT(15),NUMPLY,NUMMAT,ANG(8),PLYTHK(8),MATID(8) 
      COMMON/THREE/IANG,ILOW,IHIGH,STPINK,NUMSTP
C 
      DOUBLE PRECISION IANG,ILOW,IHIGH
      COMPLEX*16 R1,R2,COMPLX,Z,Z1,Z2,CPOS(50),CNEG(50),CZERO,CM,
     1AK1,AK2,XI1,XI2,PHI1,PHI2,COM1,COM2,XXI1,XXI2 
      COMPLEX*16 CHECK1,CHECK2,P1,P2,Q1,Q2 
C 
C 
      COMPLEX*16 A1(50),A2(50) 
      DIMENSION AMATRX(4,4),BMATRX(4),STRESS(3,7,73)
      DIMENSION U(7,73),V(7,73),S(3,3)
      DIMENSION WORK(5),COEF(5),RTR(4),RTI(4) 
C 
C     INITIALIZE COMPLEX NUMBER:  SQRT(-1.) 
C 
      COMPLX=(0.,1.)
C 
C      CALCULATE COMPLEX PARAMETERS 
C 
      NUMCO=4 
      COEF(1)=S(2,2)*1000000
      COEF(2)=-2.*S(2,3)*1000000
      COEF(3)=(2.*S(1,2)+S(3,3))*1000000
      COEF(4)=-2.*S(1,3)*1000000
      COEF(5)=S(1,1)*1000000
      CALL ROOTS(COEF,WORK,NUMCO,RTR,RTI,IE)
      R1=RTR(1)+COMPLX*RTI(1) 
      IF(RTI(2).GT.0.0) R1=RTR(2)+COMPLX*RTI(2) 
      R2=RTR(3)+COMPLX*RTI(3) 
      IF(RTI(4).GT.0.0) R2=RTR(4)+COMPLX*RTI(4) 
C 
      P1=S(1,1)*R1*R1+S(1,2)-S(1,3)*R1
      P2=S(1,1)*R2*R2+S(1,2)-S(1,3)*R2
      Q1=S(1,2)*R1+S(2,2)/R1-S(2,3) 
      Q2=S(1,2)*R2+S(2,2)/R2-S(2,3) 
C 
C 
C 
      PI=3.1415926535 
C 
      THICK=0.
      DO 10 N=1,NUMPLY
      THICK=THICK+PLYTHK(N) 
   10 CONTINUE
      P=4.0*P/PI
C 
C     A COSINE LOAD DISTRIBUTION OVER HALF OF HOLE AT AN ANGLE
C     ALPHA TO X AXIS 
C 
C     CALCULATE COMPLEX CONSTANTS 
C 
      PI2=PI/2.0
      M=-1
   20 CONTINUE
      M=M+1 
      IF(M.EQ.1) GO TO 40 
   30 CONTINUE
      C1=DSIN((M-1)*PI2)/(2*(M-1)) 
      C2=DSIN((M+1)*PI2)/(2*(M+1)) 
      C3=DSIN((M-1)*(-PI2))/(2*(M-1))
      C4=DSIN((M+1)*(-PI2))/(2*(M+1))
      C5=DCOS((M-1)*PI2)/(2*(M-1)) 
      C6=DCOS((M+1)*PI2)/(2*(M+1)) 
      C7=DCOS((M-1)*(-PI2))/(2*(M-1))
      C8=DCOS((M+1)*(-PI2))/(2*(M+1))
      CM=P*((C1+C2-C3-C4)-COMPLX*(-C5-C6+C7+C8))/(2.0*PI) 
      IF(M.EQ.0) CZERO=CM 
      IF(M.GT.1) CPOS(M)=CM 
      IF(M.LT.-1) MN=-1*M 
      IF(M.LT.-1) CNEG(MN)=CM 
      IF(M.LE.0) GO TO 50 
      M=-1*M
      GO TO 30
   40 CONTINUE
      C1=PI2
      C2=DSIN(2.*(PI2))/4. 
      C3=DSIN(2.*(-PI2))/4.
      C4=DSIN(PI2)*DSIN(PI2)/2. 
      C5=DSIN(-PI2)*DSIN(-PI2)/2. 
      CM=P*((C1+C2-C3)-M*COMPLX*(C4-C5))/(2.*PI)
      IF(M.EQ.1) CPOS(1)=CM 
      IF(M.EQ.-1) CNEG(1)=CM
      IF(M.EQ.-1) GO TO 50
      M=-1*M
      GO TO 40
   50 CONTINUE
      M=IABS(M) 
      IF(M.LT.49) GO TO 20
C 
C     TRANSFORM COMPLEX PARAMETERS INTO REAL AND IMAGINARY PARTS
C 
      S1=DBLE(R1) 
      S2=DBLE(R2) 
      T1=DIMAG(R1)
      T2=DIMAG(R2)
C 
C     EQUATING COEFFICIENTS AND SOLVING FOR CONSTANTS 
  
      DO 80 M=1,45
      MN=M-1
      IF(MN.NE.0) GO TO 60
      BMATRX(1)=DBLE(-CZERO*DIA/2.) 
      BMATRX(2)=DIMAG(-CZERO*DIA/2.)
      GO TO 70
   60 CONTINUE
      BMATRX(1)=DBLE(-CPOS(MN)*DIA/(2.*(MN+1))) 
      BMATRX(2)=DIMAG(-CPOS(MN)*DIA/(2.*(MN+1)))
   70 CONTINUE
      MN=M+1
      MNEG=-1*MN
      BMATRX(3)=DBLE(-CNEG(MN)*DIA/(2.*(MNEG+1))) 
      BMATRX(4)=DIMAG(-CNEG(MN)*DIA/(2.*(MNEG+1)))
      AMATRX(1,1)=T1+1. 
      AMATRX(1,2)=S1
      AMATRX(1,3)=T2+1. 
      AMATRX(1,4)=S2
      AMATRX(2,1)=S1
      AMATRX(2,2)=-T1-1.
      AMATRX(2,3)=S2
      AMATRX(2,4)=-T2-1.
      AMATRX(3,1)=1.-T1 
      AMATRX(3,2)=-S1 
      AMATRX(3,3)=1.-T2 
      AMATRX(3,4)=-S2 
      AMATRX(4,1)=S1
      AMATRX(4,2)=1.-T1 
      AMATRX(4,3)=S2
      AMATRX(4,4)=1.-T2 
      CALL SIMULT(AMATRX,BMATRX,4,J)
      IF(J.EQ.1)WRITE(6,705)
 705  FORMAT(' SIMULT CALCULATES A SINGULAR SET OF EQS.') 
      A1(M)=BMATRX(1)+COMPLX*BMATRX(2)
      A2(M)=BMATRX(3)+COMPLX*BMATRX(4)
   80 CONTINUE
C 
      PX=2.*PI*DIMAG(COMPLX*DIA*CNEG(1)/2.) 
      PY=2.*PI*DBLE(COMPLX*DIA*CNEG(1)/2.)
C 
      AMATRX(1,1)=T1
      AMATRX(1,2)=S1
      AMATRX(1,3)=T2
      AMATRX(1,4)=S2
      AMATRX(2,1)=0.0 
      AMATRX(2,2)=1.0 
      AMATRX(2,3)=0.0 
      AMATRX(2,4)=1.0 
      AMATRX(3,1)=2.*S1*T1
      AMATRX(3,2)=S1*S1-T1*T1 
      AMATRX(3,3)=2.*S2*T2
      AMATRX(3,4)=S2*S2-T2*T2 
      AMATRX(4,1)=-T1/(S1*S1+T1*T1) 
      AMATRX(4,2)=S1/(S1*S1+T1*T1)
      AMATRX(4,3)=-T2/(S2*S2+T2*T2) 
      AMATRX(4,4)=S2/(S2*S2+T2*T2)
      BMATRX(1)=PX/(4.*PI)
      BMATRX(2)=-PY/(4.*PI) 
      BMATRX(3)=(S(1,2)*PY+S(1,3)*PX)/(4.*PI*S(1,1))
      BMATRX(4)=-(S(1,2)*PX+S(2,3)*PY)/(4.*PI*S(2,2)) 
      CALL SIMULT(AMATRX,BMATRX,4,J)
      IF(J.EQ.1)WRITE(6,706)
 706  FORMAT(' SIMULT CALCULATES A SINGULAR SET OF EQS.') 
C 
      AK1=BMATRX(1)+COMPLX*BMATRX(2)
      AK2=BMATRX(3)+COMPLX*BMATRX(4)
C 
      NUMPT=((IHIGH-ILOW)/IANG)+1 
      ALPHA=-ALPHA*PI/180.0 
      ALPH=-ALPHA 
      DO 150 JJ=1,NUMSTP
      DO 140 NN=1,NUMPT 
C 
      U(JJ,NN)=0.0
      V(JJ,NN)=0.0
      NNN=NN-1
      JJJ=JJ-1
      THETA=(NNN*IANG+ILOW)*PI/180.0
      RADIUS=JJJ*STPINK+DIA/2.0 
C 
C     CALCULATE X AND Y COORDINATES OF POINTS AROUND LOADED HOLE
C 
      X=RADIUS*DCOS(THETA+ALPHA) 
      Y=RADIUS*DSIN(THETA+ALPHA) 
C 
C     CALCULATE PARAMETERS FOR LOADED HOLE EQUATIONS
C 
      Z1=X+R1*Y 
      Z2=X+R2*Y 
      Z=X+COMPLX*Y
C 
C     MAPPING FUNCTION
C 
C 
      XXI1=CDSQRT(Z1*Z1-DIA*DIA/4.-R1*R1*DIA*DIA/4.) 
      XXI2=CDSQRT(Z2*Z2-DIA*DIA/4.-R2*R2*DIA*DIA/4.) 
C 
C     CHOOSE CORRECT SIGN OF CSQRT
C 
   90 CONTINUE
      XI1=Z1+XXI1 
      XI2=Z2+XXI2 
      XI1=2.*XI1/(DIA*(1.-COMPLX*R1)) 
      XI2=2.*XI2/(DIA*(1.-COMPLX*R2)) 
      COX1=DBLE(XI1)*DBLE(XI1)+DIMAG(XI1)*DIMAG(XI1)
      COX2=DBLE(XI2)*DBLE(XI2)+DIMAG(XI2)*DIMAG(XI2)
      IF(COX1.GE..99999) GO TO 100
      XXI1=-XXI1
      GO TO 90
  100 CONTINUE
      IF(COX2.GE..99999) GO TO 110
      XXI2=-XXI2
      GO TO 90
  110 CONTINUE
      XXI1=XI1
      XXI2=XI2
C 
C     CALCULATE PHI PRIME 
C 
      COM1=(0.,0.)
      COM2=(0.,0.)
      DO 120 M=1,45 
      COM1=COM1+M*A1(M)*XI1**(-1*M) 
      COM2=COM2+M*A2(M)*XI2**(-1*M) 
  120 CONTINUE
C 
C     CHECK SIGN OF CSQRT 
C 
      XI1=CDSQRT(Z1*Z1-DIA*DIA/4.-DIA*DIA*R1*R1/4.)
      XI2=CDSQRT(Z2*Z2-DIA*DIA/4.-DIA*DIA*R2*R2/4.)
      CHECK1=Z1/XI1 
      CHECK2=Z2/XI2 
      IF(DBLE(CHECK1).LT.-.00001) XI1=-1.*XI1 
      IF(DBLE(CHECK2).LT.-.00001) XI2=-1.*XI2 
      PHI1=(AK1-COM1)/XI1 
      PHI2=(AK2-COM2)/XI2 
C 
C     CALCULATE STRESS COMPONENTS IN LAMINATE AT COORDINATES X,Y
C 
      STRX=2.*DBLE(R1*R1*PHI1+R2*R2*PHI2) 
      STRY=2.*DBLE(PHI1+PHI2) 
      STRXY=-2.*DBLE(R1*PHI1+R2*PHI2) 
      STRESS(1,JJ,NN)=STRX*DCOS(ALPH)*DCOS(ALPH)+STRY*DSIN(ALPH)*
     1                DSIN(ALPH)-2.*STRXY*DSIN(ALPH)*DCOS(ALPH)
      STRESS(2,JJ,NN)=STRX*DSIN(ALPH)*DSIN(ALPH)+STRY*DCOS(ALPH)*
     1                DCOS(ALPH)+2.*STRXY*DSIN(ALPH)*DCOS(ALPH)
      STRESS(3,JJ,NN)=STRX*DSIN(ALPH)*DCOS(ALPH)-STRY*DSIN(ALPH)*
     1                DCOS(ALPH)+STRXY*(DCOS(ALPH)*DCOS(ALPH)- 
     2                DSIN(ALPH)*DSIN(ALPH))
C 
C     CALCULATE DISPLACEMENTS 
C 
      XI1=XXI1
      XI2=XXI2
      COM1=(0.,0.)
      COM2=(0.,0.)
      DO 130 M=1,45 
      COM1=COM1+A1(M)*XI1**(-1*M) 
      COM2=COM2+A2(M)*XI2**(-1*M) 
  130 CONTINUE
      XXI1=CDLOG(XI1)
      XXI2=CDLOG(XI2)
      PHI1=AK1*XXI1+COM1
      PHI2=AK2*XXI2+COM2
      U(JJ,NN)=2.*DBLE(P1*PHI1+P2*PHI2) 
      V(JJ,NN)=2.*DBLE(Q1*PHI1+Q2*PHI2) 
C 
  140 CONTINUE
  150 CONTINUE
C 
      RETURN
      END 
C 
C     **********************************************************
C 
      SUBROUTINE PLYSTR(IFAIL)
C 
C     TRANSFORMS LAMINATE STRAINS TO PLY STRESSES/STRAINS BY ASSUMING 
C     CONSTANT STRAIN THROUGH THE THICKNESS 
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/ONE/E1(3),E2(3),G12(3),V12(3)
      COMMON/TWO/IOUT(15),NUMPLY,NUMMAT,ANG(8),PLYTHK(8),MATID(8) 
      COMMON/THREE/IANG,ILOW,IHIGH,STPINK,NUMSTP
      COMMON/EIGHT/STRESS(3,7,73),STRAIN(3,7,73)
      COMMON/NINE/STR1(8,7,73),STR2(8,7,73),STR12(8,7,73) 
      DOUBLE PRECISION IANG,ILOW,IHIGH
C 
C 
C     STRAINS PER PLY 
C 
      MOVE=0
      NUMPT=((IHIGH-ILOW)/IANG)+1 
      IF(PUTOUT(IOUT,7).EQ.2.) WRITE(6,10)
   10 FORMAT(///20X,'STRAINS PER PLY',//'  DIST   ANGLE     PLY', 
     1'   STRAIN 1    STRAIN 2   SHEAR STRAIN'/)
   20 CONTINUE
      DO 40 JJ=1,NUMSTP 
      DO 40 NN=1,NUMPT
      DO 40 L=1,NUMPLY
      D=ANG(L)*3.1415926535/180.0 
      STRANX=STRAIN(1,JJ,NN)
      STRANY=STRAIN(2,JJ,NN)
      GAMA=STRAIN(3,JJ,NN)
C 
      STRAN1=STRANX*DCOS(D)*DCOS(D) 
      STRAN2=STRANY*DSIN(D)*DSIN(D) 
      GAMA12=GAMA*DSIN(D)*DCOS(D) 
      STR1(L,JJ,NN)=STRAN1+STRAN2+GAMA12
      STRAN1=STRANX*DSIN(D)*DSIN(D) 
      STRAN2=STRANY*DCOS(D)*DCOS(D) 
      GAMA12=-1.*GAMA*DSIN(D)*DCOS(D) 
      STR2(L,JJ,NN)=STRAN1+STRAN2+GAMA12
      STRAN1=-2.*STRANX*DSIN(D)*DCOS(D) 
      STRAN2=2.*STRANY*DSIN(D)*DCOS(D)
      GAMA12=GAMA*DCOS(D)*DCOS(D)-GAMA*DSIN(D)*DSIN(D)
      STR12(L,JJ,NN)=STRAN1+STRAN2+GAMA12 
C 
      ANGLE=(NN-1)*IANG+ILOW
      DIST=(JJ-1)*STPINK
      IF(PUTOUT(IOUT,7).EQ.2.) WRITE(6,30)DIST,ANGLE,ANG(L),
     1STR1(L,JJ,NN),STR2(L,JJ,NN),STR12(L,JJ,NN)
   30 FORMAT(F6.3,2F8.2,3F12.6) 
C 
C 
C 
C 
   40 CONTINUE
      IF(MOVE.EQ.1) GO TO 80
C 
C     STRESSES PER PLY
C 
      IF(PUTOUT(IOUT,8).EQ.2.) WRITE(6,50)
   50 FORMAT(///20X,'STRESSES PER PLY',//'  DIST   ANGLE     PLY',
     1'   STRESS 1    STRESS 2   SHEAR STRESS'/)
      DO 70 JJ=1,NUMSTP 
      DO 70 NN=1,NUMPT
      DO 70 L=1,NUMPLY
      M=MATID(L)
      V21=V12(M)*E2(M)/E1(M)
      DEN=1.-V12(M)*V21 
      ABC=STR2(L,JJ,NN)/DEN 
      BCA=STR1(L,JJ,NN) 
C 
      STR1(L,JJ,NN)=E1(M)*STR1(L,JJ,NN)/DEN+V12(M)*E2(M)*ABC
      STR2(L,JJ,NN)=V12(M)*E2(M)*BCA/DEN+E2(M)*ABC
      STR12(L,JJ,NN)=STR12(L,JJ,NN)*G12(M)
C 
      ANGLE=(NN-1)*IANG+ILOW
      DIST=(JJ-1)*STPINK
      IF(PUTOUT(IOUT,8).EQ.2.) WRITE(6,60)DIST,ANGLE,ANG(L),
     1STR1(L,JJ,NN),STR2(L,JJ,NN),STR12(L,JJ,NN)
   60 FORMAT(F6.3,2F8.2,3F12.2) 
C 
   70 CONTINUE
      MOVE=1
      IF(IFAIL.EQ.1) GO TO 20 
   80 CONTINUE
C 
      RETURN
      END 
C 
C     *********************************************************** 
C 
      SUBROUTINE FAILURE
C 
C     POINT STRESS/STRAIN ANALYSIS FOR FAILURE USING UNIDIRECTIONAL 
C     MATERIAL ALLOWABLES 
C 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/TWO/IOUT(15),NUMPLY,NUMMAT,ANG(8),PLYTHK(8),MATID(8) 
      COMMON/THREE/IANG,ILOW,IHIGH,STPINK,NUMSTP
      COMMON/FOUR/PX,PY,PXY,P,PW,ALPHA,BETA,DIA,CORRECT 
      COMMON/FIVE/FXT(3),FXC(3),FYT(3),FYC(3),FXY(3),IFAIL
      COMMON/NINE/STR1(8,7,73),STR2(8,7,73),STR12(8,7,73) 
      DOUBLE PRECISION IANG,ILOW,IHIGH
      DIMENSION PLYFAIL(3,8),FAILS(3,8),RATIO(3,8),PLYRATO(3,8) 
C 
      IF(PUTOUT(IOUT,9).NE.2.) GO TO 40 
      IF(IFAIL.GT.2) GO TO 20 
      WRITE(6,10) 
   10 FORMAT(///20X,'FAILURE CRITERIA PER PLY',//'   DIST     ANGLE ',
     1'     PLY',12X,'FAILURE NUMBERS'/35X,'1         2       SHEAR') 
      GO TO 40
   20 CONTINUE
      WRITE(6,30) 
   30 FORMAT(///20X,'FAILURE CRITERIA PER PLY',//'   DIST     ANGLE', 
     1'      PLY      FAILURE         FAILURE RATIOS'/32X'NUMBER     ', 
     2'  1         2      SHEAR') 
   40 CONTINUE
C 
      CHECK=0.
      KKK=1 
      F2=0.0
      F3=0.0
      NUMPT=((IHIGH-ILOW)/IANG)+1 
      DO 170 JJ=1,NUMSTP
      DO 170 KK=1,NUMPT 
      SIG=1.0 
      DO 160 II=1,NUMPLY
C 
      X=STR1(II,JJ,KK)
      Y=STR2(II,JJ,KK)
      XY=STR12(II,JJ,KK)
      MATII=MATID(II) 
C 
C 
      GO TO (50,50,60,70,80) IFAIL
C 
   50 CONTINUE
C 
C     MAXIMUM STRESS/STRAIN 
C 
      FX=FXT(MATII) 
      IF(X.LT.0.0) FX=FXC(MATII)
      FY=FYT(MATII) 
      IF(Y.LT.0.0) FY=FYC(MATII)
      F1=X/FX 
      F2=Y/FY 
      F3=XY/FXY(MATII)
      GO TO 90
C 
C 
   60 CONTINUE
C 
C     TSAI-HILL CRITERIA
C 
      FX=FXT(MATII) 
      IF(X.LT.0.0) FX=FXC(MATII)
      FY=FYT(MATII) 
      IF(Y.LT.0.0) FY=FYC(MATII)
      F1=X*X/(FX*FX)+Y*Y/(FY*FY)-X*Y/(FX*FX)+ 
     1   XY*XY/(FXY(MATII)*FXY(MATII))
      RATIOX=(X/FX)/SQRT(F1)
      RATIOY=(Y/FY)/SQRT(F1)
      RATIOXY=(XY/FXY(MATII))/SQRT(F1)
      GO TO 90
C 
C 
   70 CONTINUE
C 
C     MODIFIED TSAI-WU CRITERIA 
C 
      F1=1./FXT(MATII)-1./FXC(MATII)
      F2=1./FYT(MATII)-1./FYC(MATII)
      F11=1./(FXT(MATII)*FXC(MATII))
      F22=1./(FYT(MATII)*FYC(MATII))
      F66=1./(FXY(MATII)*FXY(MATII))
      F1=F1*X+F2*Y+F11*X*X+F22*Y*Y+F66*XY*XY
      FX=FXT(MATII) 
      IF(X.LT.0.0) FX=FXC(MATII)
      FY=FYT(MATII) 
      IF(Y.LT.0.0) FY=FYC(MATII)
      F1=ABS(F1)
      RATIOX=(X/FX)/SQRT(F1)
      RATIOY=(Y/FY)/SQRT(F1)
      RATIOXY=(XY/FXY(MATII))/SQRT(F1)
      GO TO 90
C 
C 
   80 CONTINUE
C 
C     HOFFMAN FAILURE CRITERIA
C 
      F1=1./FXT(MATII)-1./FXC(MATII)
      F2=1./FYT(MATII)-1./FYC(MATII)
      F11=1./(FXT(MATII)*FXC(MATII))
      F22=1./(FYT(MATII)*FYC(MATII))
      F66=1./(FXY(MATII)*FXY(MATII))
      F12=-1./(FXT(MATII)*FXC(MATII)) 
      F1=F1*X+F2*Y+F11*X*X+F22*Y*Y+F12*X*Y+F66*XY*XY
      FX=FXT(MATII) 
      IF(X.LT.0.0) FX=FXC(MATII)
      FY=FYT(MATII) 
      IF(Y.LT.0.0) FY=FYC(MATII)
      F1=ABS(F1)
      RATIOX=(X/FX)/SQRT(F1)
      RATIOY=(Y/FY)/SQRT(F1)
      RATIOXY=(XY/FXY(MATII))/SQRT(F1)
      GO TO 90
C 
C 
   90 CONTINUE
C 
      ANGLE=(KK-1)*IANG+ILOW
      DIST=(JJ-1)*STPINK
      IF(IFAIL.GT.2) GO TO 110
      IF(PUTOUT(IOUT,9).EQ.2.) WRITE(6,100) DIST,ANGLE,ANG(II), 
     1F1,F2,F3
  100 FORMAT(F7.3,2F10.2,3F10.3)
      GO TO 130 
  110 CONTINUE
      IF(PUTOUT(IOUT,9).EQ.2.) WRITE(6,120) DIST,ANGLE,ANG(II), 
     1F1,RATIOX,RATIOY,RATIOXY
  120 FORMAT(F7.3,2F10.2,4F10.3)
  130 CONTINUE
C 
C     AUTOMATIC SEARCH FOR FAILURE ROUTINE
C 
      IF(SIG.EQ.2.) FAILS(1,II)=F1
      IF(SIG.EQ.2.) FAILS(2,II)=F2
      IF(SIG.EQ.2.) FAILS(3,II)=F3
      IF(SIG.EQ.2.) RATIO(1,II)=RATIOX
      IF(SIG.EQ.2.) RATIO(2,II)=RATIOY
      IF(SIG.EQ.2.) RATIO(3,II)=RATIOXY 
      IF(JJ.NE.2) GO TO 150 
      PLYFAIL(1,II)=F1
      PLYFAIL(2,II)=F2
      PLYFAIL(3,II)=F3
      PLYRATO(1,II)=RATIOX
      PLYRATO(2,II)=RATIOY
      PLYRATO(3,II)=RATIOXY 
      CHK=CHECK 
      IF(ABS(CHECK).LT.ABS(F1)) CHECK=F1
      IF(ABS(CHECK).LT.ABS(F2)) CHECK=F2
      IF(ABS(CHECK).LT.ABS(F3)) CHECK=F3
      IF(CHECK.EQ.CHK) GO TO 150
      KKK=KK
      III=II
      SIG=2.0 
      DO 140 M=1,III
      DO 140 N=1,3
      FAILS(N,M)=PLYFAIL(N,M) 
      RATIO(N,M)=PLYRATO(N,M) 
  140 CONTINUE
  150 CONTINUE
C 
C 
  160 CONTINUE
  170 CONTINUE
C 
C 
      IF(CHECK.EQ.0.0) GO TO 260
      IF(IFAIL.EQ.1) CORRECT=1.0/ABS(CHECK) 
      IF(IFAIL.EQ.2) CORRECT=1.0/ABS(CHECK) 
      IF(IFAIL.EQ.3) CORRECT=1.0/SQRT(CHECK)
      IF(IFAIL.EQ.4) CORRECT=1.0/SQRT(CHECK)
      IF(IFAIL.EQ.5) CORRECT=1.0/SQRT(CHECK)
C 
      IF(PUTOUT(IOUT,10).NE.2.) GO TO 250 
      IF(CORRECT.LT..999.OR.CORRECT.GT.1.001) GO TO 250 
      ANGLE=(KKK-1)*IANG+ILOW 
C 
      IF(IFAIL.GT.2) GO TO 210
      WRITE(6,180) PX,PY,PXY,P
  180 FORMAT(///20X,'AUTOMATIC SEARCH FOR FAILURE'//25X,
     1'FAILURE STRESSES'/18X,'PX',10X,'PY',10X,'PXY',10X,'P'/,
     211X,4F12.2//8X,'DIST   ANGLE       PLY      FAILURE NUMBERS'/,
     336X,'1       2     SHEAR')
C 
      DO 200 I=1,NUMPLY 
      WRITE(6,190) STPINK,ANGLE,ANG(I),FAILS(1,I),FAILS(2,I),FAILS(3,I) 
  190 FORMAT(F11.3,F9.2,F10.2,3F8.3)
  200 CONTINUE
      GO TO 260 
C 
  210 CONTINUE
      WRITE(6,220) PX,PY,PXY,P
  220 FORMAT(///20X,'AUTOMATIC SEARCH FOR FAILURE'//25X,
     1'FAILURE STRESSES'/18X,'PX',10X,'PY',10X,'PXY',10X,'P'/,
     211X,4F12.2//5X,'   DIST   ANGLE     PLY      FAILURE  ',
     39X,'FAILURE RATIOS'/35X,'NUMBER',7X,'1',9X,'2',7X,'SHEAR')
      DO 240 I=1,NUMPLY 
      WRITE(6,230) STPINK,ANGLE,ANG(I),FAILS(1,I),RATIO(1,I), 
     1 RATIO(2,I),RATIO(3,I)
  230 FORMAT(F11.3,F9.2,F10.2,4F10.3) 
  240 CONTINUE
  250 CONTINUE
C 
C 
  260 CONTINUE
      IF(PUTOUT(IOUT,10).NE.2.) CORRECT=1.0 
C 
      RETURN
      END 
      SUBROUTINE SIMULT(A,B,N,KS) 
C     TEST FOR ALGORITHMIC SINGULARITY ADDED 01/10/79 
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(1),B(1) 
C     MACHINE EPSILON FOR CYBER SINGLE PRECISION
      DATA EPS/7.11D-15/
      TOL=3.18*EPS*(N-1)
      BETA=0.0
      KS=0
      JJ=-N 
      DO 65 J=1,N 
      JY=J+1
      JJ=JJ+N+1 
      BIGA=0.0
      IT=JJ-J 
      DO 30 I=J,N 
      IJ=IT+I 
      IF(ABS(BIGA)-ABS(A(IJ))) 20,30,30 
   20 BIGA=A(IJ)
      IMAX=I
   30 CONTINUE
      IF(ABS(BIGA).GT.BETA)BETA=ABS(BIGA) 
      IF(ABS(BIGA)-TOL*BETA) 35,35,40 
   35 KS=1
      RETURN
   40 I1=J+N*(J-2)
      IT=IMAX-J 
      DO 50 K=J,N 
      I1=I1+N 
      I2=I1+IT
      SAVE=A(I1)
      A(I1)=A(I2) 
      A(I2)=SAVE
   50 A(I1)=A(I1)/BIGA
      SAVE=B(IMAX)
      B(IMAX)=B(J)
      B(J)=SAVE/BIGA
      IF(J-N) 55,70,55
   55 IQS=N*(J-1) 
      DO 65 IX=JY,N 
      IXJ=IQS+IX
      IT=J-IX 
      DO 60 JX=JY,N 
      IXJX=N*(JX-1)+IX
      JJX=IXJX+IT 
   60 A(IXJX)=A(IXJX)-(A(IXJ)*A(JJX)) 
   65 B(IX)=B(IX)-(B(J)*A(IXJ)) 
   70 NY=N-1
      IT=N*N
      DO 80 J=1,NY
      IA=IT-J 
      IB=N-J
      IC=N
      DO 80 K=1,J 
      B(IB)=B(IB)-A(IA)*B(IC) 
      IA=IA-N 
   80 IC=IC-1 
      RETURN
      END 
      SUBROUTINE ROOTS(XCOF,COF,M,ROOTR,ROOTI,IER)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XCOF(M),COF(M),ROOTR(M),ROOTI(M)
C      DOUBLE PRECISION XO,YO,X,Y,XPR,YPR,UX,UY,V,YT,XT,U
C     &                ,XT2,YT2,SUMSQ,DX,DY,TEMP,ALPHA,FI
C     &                ,RMPREC,TOL 
C     RELATIVE MACHINE PRECISION (TEST FOR *ALMOST ZERO*) 
      DATA RMPREC/1.0D-14/ ,TOL/1.0D-4/ 
      IFIT=0
      N=M 
      IER=0 
      IF(XCOF(N+1)) 10,25,10
   10 IF(N) 15,15,32
   15 IER=1 
      GO TO 200 
   25 IER=4 
      GO TO 200 
   30 IER=2 
      GO TO 200 
   32 IF(N-36) 35,35,30 
   35 NX=N
      NXX=N+1 
      N2=1
      KJ1 = N+1 
      DO 40 L=1,KJ1 
      MT=KJ1-L+1
   40 COF(MT)=XCOF(L) 
   45 XO=.00500101D0
      YO=0.01000101D0 
      IN=0
   50 X=XO
      XO=-10.D0*YO
      YO=-10.D0*X 
      X=XO
      Y=YO
      IN=IN+1 
      GO TO 59
   55 IFIT=1
      XPR=X 
      YPR=Y 
   59 ICT=0 
   60 UX=0.D0 
      UY=0.D0 
      V =0.D0 
      YT=0.D0 
      XT=1.D0 
      U=COF(N+1)
      IF(DABS(U).LE.RMPREC)GO TO 130
   65 DO 70 I=1,N 
      L =N-I+1
      TEMP=COF(L) 
      XT2=X*XT-Y*YT 
      YT2=X*YT+Y*XT 
      U=U+TEMP*XT2
      V=V+TEMP*YT2
      FI=I
      UX=UX+FI*XT*TEMP
      UY=UY-FI*YT*TEMP
      XT=XT2
   70 YT=YT2
      SUMSQ=UX*UX+UY*UY 
      IF(SUMSQ.LE.RMPREC)GO TO 110
   75 DX=(V*UY-U*UX)/SUMSQ
      X=X+DX
      DY=-(U*UY+V*UX)/SUMSQ 
      Y=Y+DY
   78 IF( DABS(DY)+ DABS(DX).LE.TOL) GO TO 100
   80 ICT=ICT+1 
      IF(ICT-500) 60,85,85
   85 IF(IFIT) 100,90,100 
   90 IF(IN-5) 50,95,95 
   95 IER=3 
      GO TO 200 
  100 DO 105 L=1,NXX
      MT=KJ1-L+1
      RTEMP=XCOF(MT)
      XCOF(MT)=COF(L) 
  105 COF(L)=RTEMP
      ITEMP=N 
      N=NX
      NX=ITEMP
      IF(IFIT) 120,55,120 
  110 IF(IFIT) 115,50,115 
  115 X=XPR 
      Y=YPR 
      GO TO 100 
  120 IFIT=0
  122 IF(DABS(Y)-1.0D-4*DABS(X)) 135,125,125
  125 ALPHA=X+X 
      SUMSQ=X*X+Y*Y 
      N=N-2 
      GO TO 140 
  130 X=0.D0
      NX=NX-1 
      NXX=NXX-1 
  135 Y=0.D0
      SUMSQ=0.D0
      ALPHA=X 
      N=N-1 
  140 COF(2)=COF(2)+ALPHA*COF(1)
  145 DO 150 L=2,N
  150 COF(L+1)=COF(L+1)+ALPHA*COF(L)-SUMSQ*COF(L-1) 
  155 ROOTI(N2)=Y 
      ROOTR(N2)=X 
      N2=N2+1 
      IF(SUMSQ.LE.RMPREC) GO TO 165 
  160 Y=-Y
      SUMSQ=0.D0
      GO TO 155 
  165 IF(N.GT.0)GO TO 45
  200 RETURN
      END 
